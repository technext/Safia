{"version":3,"sources":["utils.js","detector.js","bootstrap-navbar.js","navbar-darken-on-scroll.js","swiper.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","shorthandRegex","result","exec","m","r","g","b","parseInt","rgbaColor","color","alpha","colors","primary","secondary","success","info","warning","danger","light","dark","grays","white","black","hasClass","className","classList","value","includes","addClass","add","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","top","left","isScrolledIntoView","offsetTop","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","all","innerHeight","innerWidth","partial","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","classes","breakpoint","split","filter","cls","pop","setCookie","name","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","newChart","config","ctx","getContext","Chart","getItemFromStore","key","defaultValue","store","localStorage","getItem","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","utils","detectorInit","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","navbarInit","Selector","NAVBAR","NAVBAR_COLLAPSE","NAVBAR_TOGGLER","ClassNames","COLLAPSED","Events","SCROLL","SHOW_BS_COLLAPSE","HIDE_BS_COLLAPSE","HIDDEN_BS_COLLAPSE","DataKey","NAVBAR_ON_SCROLL","navbar","windowHeight","navbarCollapse","allColors","colorName","Object","keys","bgClassName","shadowName","colorRgb","getComputedStyle","backgroundImage","transition","style","backgroundColor","remove","breakPoint","navbarDarkenOnScroll","NAVBAR_DARKEN_ON_SCROLL","defaultColorName","toString","paddingTop","borderBottom","swiper","Swiper","slidesPerView","spaceBetween","pagination","clickable"],"mappings":"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","file":"theme.js","sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                    Utils                                   */\n/* -------------------------------------------------------------------------- */\nconst docReady = (fn) => {\n  // see if DOM is already available\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  } else {\n    setTimeout(fn, 1);\n  }\n};\n\nconst resize = (fn) => window.addEventListener(\"resize\", fn);\n\nconst isIterableArray = (array) => Array.isArray(array) && !!array.length;\n\nconst camelize = (str) => {\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) =>\n    c ? c.toUpperCase() : \"\"\n  );\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\n};\n\nconst getData = (el, data) => {\n  try {\n    return JSON.parse(el.dataset[camelize(data)]);\n  } catch (e) {\n    return el.dataset[camelize(data)];\n  }\n};\n\n/* ----------------------------- Colors function ---------------------------- */\n\nconst hexToRgb = (hexValue) => {\n  let hex;\n  hexValue.indexOf(\"#\") === 0\n    ? (hex = hexValue.substring(1))\n    : (hex = hexValue);\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n    hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b)\n  );\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null;\n};\n\nconst rgbaColor = (color = \"#fff\", alpha = 0.5) =>\n  `rgba(${hexToRgb(color)}, ${alpha})`;\n\n/* --------------------------------- Colors --------------------------------- */\n\nconst colors = {\n  primary: \"#0057FF\",\n  secondary: \"#748194\",\n  success: \"#00d27a\",\n  info: \"#27bcfd\",\n  warning: \"#f5803e\",\n  danger: \"#e63757\",\n  light: \"#f9fafd\",\n  dark: \"#000\",\n};\n\nconst grays = {\n  white: \"#fff\",\n  100: \"#f9fafd\",\n  200: \"#edf2f9\",\n  300: \"#d8e2ef\",\n  400: \"#b6c1d2\",\n  500: \"#9da9bb\",\n  600: \"#748194\",\n  700: \"#162044\", //\n  800: \"#4d5969\",\n  900: \"#070E27\", // bg dark\n  1000: \"#232e3c\",\n  1100: \"#0b1727\",\n  black: \"#000\",\n};\n\nconst hasClass = (el, className) => {\n  !el && false;\n  return el.classList.value.includes(className);\n};\n\nconst addClass = (el, className) => {\n  el.classList.add(className);\n};\n\nconst getOffset = (el) => {\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n};\n\nconst isScrolledIntoView = (el) => {\n  let top = el.offsetTop;\n  let left = el.offsetLeft;\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n\n  while (el.offsetParent) {\n    // eslint-disable-next-line no-param-reassign\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return {\n    all:\n      top >= window.pageYOffset &&\n      left >= window.pageXOffset &&\n      top + height <= window.pageYOffset + window.innerHeight &&\n      left + width <= window.pageXOffset + window.innerWidth,\n    partial:\n      top < window.pageYOffset + window.innerHeight &&\n      left < window.pageXOffset + window.innerWidth &&\n      top + height > window.pageYOffset &&\n      left + width > window.pageXOffset,\n  };\n};\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1540,\n};\n\nconst getBreakpoint = (el) => {\n  const classes = el && el.classList.value;\n  let breakpoint;\n  if (classes) {\n    breakpoint =\n      breakpoints[\n        classes\n          .split(\" \")\n          .filter((cls) => cls.includes(\"navbar-expand-\"))\n          .pop()\n          .split(\"-\")\n          .pop()\n      ];\n  }\n  return breakpoint;\n};\n\n/* --------------------------------- Cookie --------------------------------- */\n\nconst setCookie = (name, value, expire) => {\n  const expires = new Date();\n  expires.setTime(expires.getTime() + expire);\n  document.cookie = name + \"=\" + value + \";expires=\" + expires.toUTCString();\n};\n\nconst getCookie = (name) => {\n  var keyValue = document.cookie.match(\"(^|;) ?\" + name + \"=([^;]*)(;|$)\");\n  return keyValue ? keyValue[2] : keyValue;\n};\n\nconst settings = {\n  tinymce: {\n    theme: \"oxide\",\n  },\n  chart: {\n    borderColor: \"rgba(255, 255, 255, 0.8)\",\n  },\n};\n\n/* -------------------------- Chart Initialization -------------------------- */\n\nconst newChart = (chart, config) => {\n  const ctx = chart.getContext(\"2d\");\n  return new window.Chart(ctx, config);\n};\n\n/* ---------------------------------- Store --------------------------------- */\n\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\n  try {\n    return JSON.parse(store.getItem(key)) || defaultValue;\n  } catch {\n    return store.getItem(key) || defaultValue;\n  }\n};\n\nconst setItemToStore = (key, payload, store = localStorage) =>\n  store.setItem(key, payload);\nconst getStoreSpace = (store = localStorage) =>\n  parseFloat(\n    (\n      escape(encodeURIComponent(JSON.stringify(store))).length /\n      (1024 * 1024)\n    ).toFixed(2)\n  );\n\nconst utils = {\n  docReady,\n  resize,\n  isIterableArray,\n  camelize,\n  getData,\n  hasClass,\n  addClass,\n  hexToRgb,\n  rgbaColor,\n  colors,\n  grays,\n  getOffset,\n  isScrolledIntoView,\n  getBreakpoint,\n  setCookie,\n  getCookie,\n  newChart,\n  settings,\n  getItemFromStore,\n  setItemToStore,\n  getStoreSpace,\n};\nexport default utils;\n","import { addClass } from './utils';\n/* -------------------------------------------------------------------------- */\n/*                                  Detector                                  */\n/* -------------------------------------------------------------------------- */\n\nconst detectorInit = () => {\n  const { is } = window;\n  const html = document.querySelector('html');\n  is.opera() && addClass(html, 'opera');\n  is.mobile() && addClass(html, 'mobile');\n  is.firefox() && addClass(html, 'firefox');\n  is.safari() && addClass(html, 'safari');\n  is.ios() && addClass(html, 'ios');\n  is.iphone() && addClass(html, 'iphone');\n  is.ipad() && addClass(html, 'ipad');\n  is.ie() && addClass(html, 'ie');\n  is.edge() && addClass(html, 'edge');\n  is.chrome() && addClass(html, 'chrome');\n  is.mac() && addClass(html, 'osx');\n  is.windows() && addClass(html, 'windows');\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\n\n};\n\nexport default detectorInit;\n","import utils from './utils';\n/*-----------------------------------------------\n|   Top navigation opacity on scroll\n-----------------------------------------------*/\nconst navbarInit = () =>{\n  const Selector = {\n    NAVBAR: '[data-navbar-on-scroll]',\n    NAVBAR_COLLAPSE: '.navbar-collapse',\n    NAVBAR_TOGGLER: '.navbar-toggler',\n    \n  };\n\n  const ClassNames = {\n    COLLAPSED: 'collapsed',\n  };\n\n  \n  const Events = {\n    SCROLL: 'scroll',\n    SHOW_BS_COLLAPSE: 'show.bs.collapse',\n    HIDE_BS_COLLAPSE: 'hide.bs.collapse',\n    HIDDEN_BS_COLLAPSE: 'hidden.bs.collapse',\n  };\n\n  const DataKey = {\n    NAVBAR_ON_SCROLL: 'navbar-light-on-scroll'\n  };\n  \n  const navbar = document.querySelector(Selector.NAVBAR);\n  \n  if (navbar){\n    const windowHeight = window.innerHeight;\n    const html = document.documentElement;\n    const navbarCollapse = navbar.querySelector(Selector.NAVBAR_COLLAPSE);\n    const allColors = { ...utils.colors, ...utils.grays };\n\n    const name = utils.getData(navbar, DataKey.NAVBAR_ON_SCROLL);\n    const colorName = Object.keys(allColors).includes(name) ? name : 'light';\n    const color = allColors[colorName];\n    const bgClassName = `bg-${colorName}`;\n    const shadowName = 'shadow-transition'\n    const colorRgb = utils.hexToRgb(color);\n    const { backgroundImage } = window.getComputedStyle(navbar);\n    const transition = 'background-color 0.35s ease';\n    navbar.style.backgroundImage = 'none';\n\n     // Change navbar background color on scroll\n     window.addEventListener(Events.SCROLL, () => {\n      const { scrollTop } = html;\n      let alpha = (scrollTop / windowHeight) * .5;\n      alpha >= 1 && (alpha = 1);\n      navbar.style.backgroundColor = `rgba(${colorRgb[0]}, ${colorRgb[1]}, ${colorRgb[2]}, ${alpha})`;\n      navbar.style.backgroundImage = (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? backgroundImage : 'none';\n      (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? navbar.classList.add(shadowName):navbar.classList.remove(shadowName);\n    });\n\n     // Toggle bg class on window resize\n    utils.resize(() => {\n      const breakPoint = utils.getBreakpoint(navbar);\n      if (window.innerWidth > breakPoint) {\n        navbar.style.backgroundImage = html.scrollTop ? backgroundImage : 'none';\n        navbar.style.transition = 'none';\n      } \n      else if (\n        !utils.hasClass(\n          navbar.querySelector(Selector.NAVBAR_TOGGLER),\n          ClassNames.COLLAPSED\n         \n        )\n      )\n\n      { \n        navbar.classList.add(bgClassName);\n        navbar.classList.add(shadowName);\n        navbar.style.backgroundImage = backgroundImage;\n      }\n     \n      if (window.innerWidth <= breakPoint) {\n        navbar.style.transition = utils.hasClass(navbarCollapse, 'show') ? transition : 'none';\n      } \n\n    });\n\n    navbarCollapse.addEventListener(Events.SHOW_BS_COLLAPSE, () => {\n      navbar.classList.add(bgClassName);\n      navbar.classList.add(shadowName);\n      navbar.style.backgroundImage = backgroundImage;\n      navbar.style.transition = transition;\n    });\n\n    navbarCollapse.addEventListener(Events.HIDE_BS_COLLAPSE, () => {\n      navbar.classList.remove(bgClassName);\n      navbar.classList.remove(shadowName);\n      !html.scrollTop && (navbar.style.backgroundImage = 'none');\n    });\n\n    navbarCollapse.addEventListener(Events.HIDDEN_BS_COLLAPSE, () => {\n      navbar.style.transition = 'none';\n    });\n\n  }\n\n};\n\nexport default navbarInit;\n\n\n\n\n\n","import utils from \"./utils\";\n/* -------------------------------------------------------------------------- */\n/*                         Navbar Darken on scroll                        */\n/* -------------------------------------------------------------------------- */\nconst navbarDarkenOnScroll = () => {\n  const Selector = {\n    NAVBAR: \"[data-navbar-darken-on-scroll]\",\n    NAVBAR_COLLAPSE: \".navbar-collapse\",\n    NAVBAR_TOGGLER: \".navbar-toggler\",\n  };\n  // const ClassNames = {\n  //   COLLAPSED: \"collapsed\",\n  // };\n  const Events = {\n    SCROLL: \"scroll\",\n    SHOW_BS_COLLAPSE: \"show.bs.collapse\",\n    HIDE_BS_COLLAPSE: \"hide.bs.collapse\",\n    HIDDEN_BS_COLLAPSE: \"hidden.bs.collapse\",\n  };\n  const DataKey = {\n    NAVBAR_DARKEN_ON_SCROLL: \"navbar-darken-on-scroll\",\n  };\n  const navbar = document.querySelector(Selector.NAVBAR);\n  if (navbar) {\n    const defaultColorName = 'dark';\n    const windowHeight = window.innerHeight;\n    const html = document.documentElement;\n    // const navbarCollapse = navbar.querySelector(Selector.NAVBAR_COLLAPSE);\n    const allColors = { ...utils.colors, ...utils.grays };\n    const name = utils.getData(navbar, DataKey.NAVBAR_DARKEN_ON_SCROLL);\n    const colorName = Object.keys(allColors).includes(name.toString())\n      ? name\n      : defaultColorName;\n    const color = allColors[colorName];\n    // const bgClassName = `bg-${colorName}`;\n    const colorRgb = utils.hexToRgb(color);\n    const { backgroundImage } = window.getComputedStyle(navbar);\n    // const transition = \"background-color 0.35s ease\";\n    const borderColor = utils.hexToRgb(allColors['700'])\n    const paddingTop = 48;\n    navbar.style.paddingTop = `${paddingTop}px`;\n    navbar.style.backgroundImage = \"none\";\n    navbar.style.borderBottom = \"none\";\n    //shadow\n    const shadowName = 'shadow-transition'\n    // Change navbar background color on scroll'\n    window.addEventListener(Events.SCROLL, () => {\n      const { scrollTop } = html;\n      let alpha = (scrollTop / windowHeight) * 2;\n      // console.log({alpha});\n      alpha >= 1 && (alpha = 1);\n      navbar.style.backgroundColor = `rgba(${colorRgb[0]}, ${colorRgb[1]}, ${colorRgb[2]}, ${alpha})`;\n      navbar.style.borderBottom = `1px solid rgba(${borderColor[0]}, ${borderColor[1]}, ${borderColor[2]}, ${alpha})`;\n      navbar.style.paddingTop = `${paddingTop * (1 - alpha)}px`;\n      navbar.style.backgroundImage =\n        alpha > 0 \n          ? backgroundImage\n          : \"none\";\n      alpha > 0.2 ? navbar.classList.add(shadowName):navbar.classList.remove(shadowName);\n    });\n    // Toggle bg class on window resize\n    // utils.resize(() => {\n    //   const breakPoint = utils.getBreakpoint(navbar);\n    //   if (window.innerWidth > breakPoint) {\n    //     navbar.classList.remove(bgClassName);\n    //     navbar.style.backgroundImage = html.scrollTop\n    //       ? backgroundImage\n    //       : \"none\";\n    //     navbar.style.transition = \"none\";\n    //   } else if (\n    //     !utils.hasClass(\n    //       navbar.querySelector(Selector.NAVBAR_TOGGLER),\n    //       ClassNames.COLLAPSED\n    //     )\n    //   ) {\n    //     navbar.classList.add(bgClassName);\n    //     // navbar.classList.add(shadowName);\n    //     navbar.style.backgroundImage = backgroundImage;\n    //   }\n    //   if (window.innerWidth <= breakPoint) {\n    //     navbar.style.transition = utils.hasClass(navbarCollapse, \"show\")\n    //       ? transition\n    //       : \"none\";\n    //   }\n    // });\n\n    // navbarCollapse.addEventListener(Events.SHOW_BS_COLLAPSE, () => {\n    //   navbar.classList.add(bgClassName);\n    //   navbar.classList.add(shadowName);\n    //   navbar.style.backgroundImage = backgroundImage;\n    //   navbar.style.transition = transition;\n    // });\n    // navbarCollapse.addEventListener(Events.HIDE_BS_COLLAPSE, () => {\n    //   navbar.classList.remove(bgClassName);\n    //   navbar.classList.remove(shadowName);\n    //   !html.scrollTop && (navbar.style.backgroundImage = \"none\");\n    // });\n    // navbarCollapse.addEventListener(Events.HIDDEN_BS_COLLAPSE, () => {\n    //   navbar.style.transition = \"none\";\n    // });\n  }\n};\nexport default navbarDarkenOnScroll;","\nconst swiper = new window.Swiper('.swiper-container', {\n  slidesPerView: 1,\n  spaceBetween: 10,\n  // init: false,\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n  },\n  breakpoints: {\n    640: {\n      slidesPerView: 1,\n      spaceBetween: 30,\n    },\n    768: {\n      slidesPerView: 2,\n      spaceBetween: 40,\n    },\n    1024: {\n      slidesPerView: 3,\n      spaceBetween: 50,\n    },\n  }\n});\nexport default swiper;\n","import { docReady } from './utils';\nimport navbarInit from './bootstrap-navbar';\nimport detectorInit from './detector';\nimport swiper from './swiper';\nimport navbarDarkenOnScroll from './navbar-darken-on-scroll'\n\n\n// /* -------------------------------------------------------------------------- */\n// /*                            Theme Initialization                            */\n// /* -------------------------------------------------------------------------- */\n\ndocReady(navbarInit);\ndocReady(detectorInit);\ndocReady(swiper);\ndocReady(navbarDarkenOnScroll);\n"]}